[{"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\index.js":"1","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\App.js":"2","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\reportWebVitals.js":"3","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\StartPage.js":"4","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SignUpSpecialist.js":"5","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\LogInAdmin.js":"6","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\LogInSpecialist.js":"7","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\SignUpRegularUser.js":"8","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\SignUpAdmin.js":"9","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\LogInRegularUser.js":"10","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AdminActions.js":"11","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\RegularUserActions.js":"12","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPrimaryFood.js":"13","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\CreateProfile.js":"14","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SpecialistActions.js":"15","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\EditProfile.js":"16","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\TrackActivity.js":"17","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPhysicalExercise.js":"18","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\AddRoutineFitnessProgram.js":"19","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\AddRoutineMealPlan.js":"20","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\AddRoutineDescription.js":"21"},{"size":3014,"mtime":1652989847140,"results":"22","hashOfConfig":"23"},{"size":420,"mtime":1652438291651,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1652436605495,"results":"25","hashOfConfig":"23"},{"size":3023,"mtime":1652451206793,"results":"26","hashOfConfig":"23"},{"size":5670,"mtime":1652715072043,"results":"27","hashOfConfig":"23"},{"size":4598,"mtime":1652556960878,"results":"28","hashOfConfig":"23"},{"size":4591,"mtime":1652715072016,"results":"29","hashOfConfig":"23"},{"size":5774,"mtime":1652556729354,"results":"30","hashOfConfig":"23"},{"size":5142,"mtime":1652556729361,"results":"31","hashOfConfig":"23"},{"size":4883,"mtime":1652717760976,"results":"32","hashOfConfig":"23"},{"size":1627,"mtime":1652788059810,"results":"33","hashOfConfig":"23"},{"size":1644,"mtime":1652732681526,"results":"34","hashOfConfig":"23"},{"size":7439,"mtime":1652786302229,"results":"35","hashOfConfig":"23"},{"size":8494,"mtime":1652713843137,"results":"36","hashOfConfig":"23"},{"size":1325,"mtime":1652984726417,"results":"37","hashOfConfig":"23"},{"size":9521,"mtime":1652798476254,"results":"38","hashOfConfig":"23"},{"size":16552,"mtime":1652960019362,"results":"39","hashOfConfig":"23"},{"size":7277,"mtime":1652863865766,"results":"40","hashOfConfig":"23"},{"size":10522,"mtime":1652995197154,"results":"41","hashOfConfig":"23"},{"size":7242,"mtime":1652995197062,"results":"42","hashOfConfig":"23"},{"size":5656,"mtime":1652996837511,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},"12ofxns",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"48"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\index.js",["117"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport {render} from \"react-dom\";\nimport LogInAdmin from \"./components/admin/LogInAdmin\";\nimport SignUpAdmin from \"./components/admin/SignUpAdmin\";\nimport AdminActions from \"./components/admin/AdminActions\";\nimport AddPrimaryFood from \"./components/admin/AddPrimaryFood\";\nimport LogInRegularUser from \"./components/regularUser/LogInRegularUser\";\nimport SignUpRegularUser from \"./components/regularUser/SignUpRegularUser\";\nimport CreateProfile from \"./components/regularUser/CreateProfile\";\nimport RegularUserActions from \"./components/regularUser/RegularUserActions\";\nimport LogInSpecialist from \"./components/specialist/LogInSpecialist\";\nimport SignUpSpecialist from \"./components/specialist/SignUpSpecialist\";\nimport SpecialistActions from \"./components/specialist/SpecialistActions\";\nimport EditProfile from \"./components/regularUser/EditProfile\";\nimport TrackActivity from \"./components/regularUser/TrackActivity\";\nimport AddPhysicalExercise from \"./components/admin/AddPhysicalExercise\";\nimport AddRoutineFitnessProgram from \"./components/specialist/AddRoutineFitnessProgram\";\nimport AddRoutineMealPlan from \"./components/specialist/AddRoutineMealPlan\";\nimport AddRoutineDescription from \"./components/specialist/AddRoutineDescription\";\n\n\nconst rootElement = document.getElementById(\"root\");\n\nrender(\n\n    <BrowserRouter>\n        <Routes>\n            <Route path=\"/\" element={<App />} />\n\n            <Route path=\"/LogInRegularUser\" element={<LogInRegularUser />} />\n            <Route path=\"/SignUpRegularUser\" element={<SignUpRegularUser />} />\n            <Route path=\"/RegularUserActions\" element={<RegularUserActions />} />\n            <Route path=\"/CreateProfile\" element={<CreateProfile />} />\n            <Route path=\"/EditProfile\" element={<EditProfile />} />\n            <Route path=\"/TrackActivity\" element={<TrackActivity />} />\n\n            <Route path=\"/LogInSpecialist\" element={<LogInSpecialist />} />\n            <Route path=\"/SignUpSpecialist\" element={<SignUpSpecialist />} />\n            <Route path=\"/SpecialistActions\" element={<SpecialistActions />} />\n            <Route path=\"/AddRoutineFitnessProgram\" element={<AddRoutineFitnessProgram />} />\n            <Route path=\"/AddRoutineMealPlan\" element={<AddRoutineMealPlan />} />\n            <Route path=\"/AddRoutineDescription\" element={<AddRoutineDescription />} />\n\n            <Route path=\"/LogInAdmin\" element={<LogInAdmin />} />\n            <Route path=\"/SignUpAdmin\" element={<SignUpAdmin />} />\n            <Route path=\"/AdminActions\" element={<AdminActions />} />\n            <Route path=\"/AddPrimaryFood\" element={<AddPrimaryFood />} />\n            <Route path=\"/AddPhysicalExercise\" element={<AddPhysicalExercise/>} />\n\n        </Routes>\n    </BrowserRouter>,\n    rootElement\n);\n\nreportWebVitals();\n",[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\App.js",["118","119"],[],"import logo from './logo.svg';\nimport './App.css';\nimport StartPage from \"./components/StartPage\";\nimport {render} from \"react-dom\";\n\n\nfunction App() {\n\n  const renderForm = (\n        <div>\n          <div className='App'>\n            {/*<header className=\"App-header\">*/}\n              <StartPage />\n            {/*</header>*/}\n          </div>\n        </div>\n  )\n\n  return (\n    renderForm\n  );\n\n}\n\nexport default App;\n",[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\reportWebVitals.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\StartPage.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SignUpSpecialist.js",["120","121"],[],"import React, {useEffect, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction SignUpRegularUser(){\r\n    const [errorMessagesSS, setErrorMessagesSS] = useState({});\r\n    const [isSubmittedSS, setIsSubmittedSS] = useState(false);\r\n    const [specialistRegistration, setSpecialistRegistration] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const errors = {\r\n        username: \"username already exists\",\r\n        email: \"email already exists\",\r\n        invalid_email: \"invalid email\"\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setSpecialistRegistration({ ...specialistRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .post('http://localhost:8080/health-reset/specialist/signUp', specialistRegistration)\r\n            .then((response) => {\r\n                console.info(response);\r\n                if (response.data === \"username_exists\") {\r\n                    setErrorMessagesSS({name: \"username\", message: errors.username});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else if (response.data === \"email_exists\"){\r\n                    setErrorMessagesSS({name: \"email\", message: errors.email});\r\n                    localStorage.removeItem(\"specialist\");\r\n                }  else if (response.data === \"invalid_email\"){\r\n                    setErrorMessagesSS({name: \"invalid_email\", message: errors.invalid_email});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else{\r\n                    setIsSubmittedSS(true);\r\n                    localStorage.setItem(\"specialist\", JSON.stringify(specialistRegistration));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            });\r\n    };\r\n\r\n    const renderErrorMessage = (nameErr) =>\r\n        nameErr === errorMessagesSS.name && (\r\n            <div className=\"error\">{errorMessagesSS.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Name </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.name}\r\n                           onChange={handleInput}\r\n                           name=\"name\" required id = \"name\"/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Email </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.email}\r\n                           onChange={handleInput}\r\n                           name=\"email\" required id = \"email\"/>\r\n                    {renderErrorMessage(\"email\")}\r\n                    {renderErrorMessage(\"invalid_email\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id = \"username\"/>\r\n                    {renderErrorMessage(\"username\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={specialistRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id = \"password\"/>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'mistyrose',}}>\r\n                <div className=\"title\">Sign Up</div>\r\n                {isSubmittedSS ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Specialist account was created successfully!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/SpecialistActions\">\r\n                                <Button as={Col} variant=\"secondary\">Go to specialist page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<LogInCustomer />, rootElement);\r\nexport default SignUpRegularUser;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\LogInAdmin.js",["122","123","124","125"],[],"import React, {useEffect, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction LogInAdmin(){\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [existentAdmins, setExistentAdmins] = useState( [] );\r\n    const [adminRegistration, setAdminRegistration] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\",\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setAdminRegistration({ ...adminRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/health-reset/admin/login\", {\r\n                params: {\r\n                    username: adminRegistration.username,\r\n                    password: adminRegistration.password\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data === \"username_error\") {\r\n                    setErrorMessages({name: \"uname\", message: errors.uname});\r\n                    localStorage.removeItem(\"admin\");\r\n                } else if (response.data === \"password_error\"){\r\n                    setErrorMessages({name: \"pass\", message: errors.pass});\r\n                    localStorage.removeItem(\"customer\");\r\n                } else{\r\n                    setIsSubmitted(true);\r\n                    localStorage.setItem(\"admin\", JSON.stringify(adminRegistration));\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            );\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={adminRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id = \"username\"/>\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={adminRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id = \"password\"/>\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'lightblue',}}>\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Admin has successfully logged in!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/AdminActions\">\r\n                                <Button as={Col} variant=\"primary\">Go to admin page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogInAdmin;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\LogInSpecialist.js",["126"],[],"import background from \"../../img/b.jpg\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\"\r\n\r\nfunction LogInSpecialist() {\r\n\r\n    const [errorMessagesS, setErrorMessagesS] = useState({});\r\n    const [isSubmittedS, setIsSubmittedS] = useState(false);\r\n    const [specialistRegistration, setSpecialistRegistration] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\",\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setSpecialistRegistration({ ...specialistRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/health-reset/specialist/login\", {\r\n                params: {\r\n                    username: specialistRegistration.username,\r\n                    password: specialistRegistration.password\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data === \"username_error\") {\r\n                    setErrorMessagesS({name: \"uname\", message: errors.uname});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else if (response.data === \"password_error\"){\r\n                    setErrorMessagesS({name: \"pass\", message: errors.pass});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else{\r\n                    setIsSubmittedS(true);\r\n                    localStorage.setItem(\"specialist\", JSON.stringify(specialistRegistration));\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            );\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessagesS.name && (\r\n            <div className=\"error\">{errorMessagesS.message}</div>\r\n        );\r\n\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id=\"username\"/>\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={specialistRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id=\"password\"/>\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n            <Outlet/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'mistyrose',}}>\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmittedS ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Specialist has successfully logged in!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/SpecialistActions\">\r\n                                <Button as={Col} variant=\"secondary\">Go to specialist page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogInSpecialist;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\SignUpRegularUser.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\SignUpAdmin.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\LogInRegularUser.js",["127","128"],[],"import React, {useEffect, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction LogInRegularUser(){\r\n\r\n    const [errorMessagesR, setErrorMessagesR] = useState({} );\r\n    const [isSubmittedR, setIsSubmittedR] = useState(false );\r\n    const [regularUserRegistration, setRegularUserRegistration] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setRegularUserRegistration({ ...regularUserRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/health-reset/regularUser/login\", {\r\n                params: {\r\n                    username: regularUserRegistration.username,\r\n                    password: regularUserRegistration.password\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data === \"username_error\") {\r\n                    setErrorMessagesR({name: \"uname\", message: errors.uname});\r\n                    localStorage.removeItem(\"regularUser\");\r\n                } else if (response.data === \"password_error\"){\r\n                    setErrorMessagesR({name: \"pass\", message: errors.pass});\r\n                    localStorage.removeItem(\"regularUser\");\r\n                } else{\r\n                    setIsSubmittedR(true);\r\n                    localStorage.setItem(\"regularUser\", JSON.stringify(regularUserRegistration));\r\n                    localStorage.setItem(\"regularUserUsername\", JSON.stringify(regularUserRegistration.username));\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            );\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessagesR.name && (\r\n            <div className=\"error\">{errorMessagesR.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={regularUserRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id = \"username\"/>\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={regularUserRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id = \"password\"/>\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'darkseagreen',}}>\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmittedR ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">User has successfully logged in!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/RegularUserActions\">\r\n                                <Button as={Col} variant=\"success\">Go to regular user page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<LogInCustomer />, rootElement);\r\nexport default LogInRegularUser;\r\n\r\n\r\n","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AdminActions.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\RegularUserActions.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPrimaryFood.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\CreateProfile.js",["129","130"],[],"import React, {useEffect, useState} from \"react\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreateProfile(){\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [profileRegistration, setProfileRegistration] = useState({\r\n        weight: \"\",\r\n        height: \"\",\r\n        birthdate: \"\",\r\n        activityLevel: \"\",\r\n        weightGoal: \"\",\r\n        nrOfStepsGoal: \"\",\r\n        regularUser: []\r\n    });\r\n    const [activityLevels, setActivityLevels] = useState( [] );\r\n    const [checkedList] = useState(new Array(activityLevels.length).fill(false));\r\n    const [selectedLevel, setSelectedLevel] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080/health-reset/activityLevel/index')\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setActivityLevels(json);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        console.log(activityLevels)\r\n        localStorage.setItem(\"activityLevels\", JSON.stringify(activityLevels));\r\n    }, []);\r\n\r\n    const errors = {\r\n        weight: \"invalid weight\",\r\n        height: \"invalid height\",\r\n        birthdate: \"invalid birthdate\",\r\n        activityLevel: \"activity level was not selected\",\r\n        weightGoal: \"invalid weight goal\",\r\n        nrOfStepsGoal: \"invalid number of steps goal\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .post('http://localhost:8080/health-reset/profile/create', profileRegistration)\r\n            .then((response) => {\r\n                console.info(response);\r\n                if (response.data === \"invalid_weight\") {\r\n                    setErrorMessages({name: \"weight\", message: errors.weight});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_height\"){\r\n                    setErrorMessages({name: \"height\", message: errors.height});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_birthdate\"){\r\n                    setErrorMessages({name: \"birthdate\", message: errors.birthdate});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_activityLevel\"){\r\n                    setErrorMessages({name: \"activityLevel\", message: errors.activityLevel});\r\n                    localStorage.removeItem(\"profile\");\r\n                }  else if (response.data === \"invalid_weightGoal\"){\r\n                    setErrorMessages({name: \"weightGoal\", message: errors.weightGoal});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_nrOfStepsGoal\"){\r\n                    setErrorMessages({name: \"nrOfStepsGoal\", message: errors.nrOfStepsGoal});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else {\r\n                    setIsSubmitted(true);\r\n                    localStorage.setItem(\"profile\", JSON.stringify(profileRegistration));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            });\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setProfileRegistration({ ...profileRegistration, [name] : value,\r\n            regularUser: JSON.parse(localStorage.getItem('regularUser'))});\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const target = e.target;\r\n        if (target.checked) {\r\n            setSelectedLevel(target.value);\r\n        }\r\n        setProfileRegistration({ ...profileRegistration, activityLevel: selectedLevel});\r\n    };\r\n\r\n    useEffect(() => {\r\n        setProfileRegistration({ ...profileRegistration, activityLevel: selectedLevel});\r\n    }, [selectedLevel])\r\n\r\n    console.log(profileRegistration)\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Weight(kg) </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.weight}\r\n                           onChange={handleInput}\r\n                           name=\"weight\" required/>\r\n                    {renderErrorMessage(\"weight\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Height(cm) </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.height}\r\n                           onChange={handleInput}\r\n                           name=\"height\" required/>\r\n                    {renderErrorMessage(\"height\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Birthdate </label>\r\n                    <input type=\"date\"\r\n                           value={profileRegistration.birthdate}\r\n                           onChange={handleInput}\r\n                           name=\"birthdate\" required/>\r\n                    {renderErrorMessage(\"birthdate\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Activity level: </label>\r\n                    <form>\r\n                        {activityLevels.map(({activityLevel}) => (\r\n                            <div key={activityLevel}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name=\"levels\"\r\n                                    value={activityLevel}\r\n                                    checked={ checkedList[selectedLevel === {activityLevel}]}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <label>{activityLevel}</label>\r\n                            </div>\r\n                        ))}\r\n                    </form>\r\n                    {renderErrorMessage(\"activityLevel\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Weight goal(kg) </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.weightGoal}\r\n                           onChange={handleInput}\r\n                           name=\"weightGoal\" required/>\r\n                    {renderErrorMessage(\"weightGoal\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Number of steps goal daily </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.nrOfStepsGoal}\r\n                           onChange={handleInput}\r\n                           name=\"nrOfStepsGoal\" required/>\r\n                    {renderErrorMessage(\"nrOfStepsGoal\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'darkseagreen',}}>\r\n                <div className=\"title\">Complete your profile</div>\r\n                {isSubmitted ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Profile successfully created!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/RegularUserActions\">\r\n                                <Button as={Col} variant=\"success\">Go to user page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>: renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProfile;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SpecialistActions.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\EditProfile.js",["131","132","133","134"],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\TrackActivity.js",["135","136","137","138","139"],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPhysicalExercise.js",["140","141","142"],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\AddRoutineFitnessProgram.js",["143","144","145","146","147","148","149","150","151","152"],[],"import React, {useEffect, useState} from \"react\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport background from \"../../img/b.jpg\";\r\n\r\nfunction AddRoutineFitnessProgram(){\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [routine, setRoutine] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        activityLevel: \"\",\r\n        listOfPhysicalExercises: [],\r\n        listOfFood: [],\r\n        specialist: {}\r\n    });\r\n    const [enableFitnessProgram, setEnableFitnessProgram] = useState(false);\r\n    const [typesOfExercise, setTypesOfExercise] = useState( [] );\r\n    const [physicalExercises, setPhysicalExercises] = useState( [] );\r\n    const [selectedExercises, setSelectedExercises] = useState( [] );\r\n    const [currentExercise, setCurrentExercise] = useState( {\r\n        name: \"\",\r\n        timeOfExecution: \"\",\r\n        caloriesBurnedPerMinute: \"\",\r\n        burnedCalories: 0\r\n    } );\r\n    const [activityLevels, setActivityLevels] = useState( [] );\r\n    const [checkedList] = useState(new Array(activityLevels.length).fill(false));\r\n    const [selectedLevel, setSelectedLevel] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        fetch('http://localhost:8080/health-reset/physicalExercise/index')\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setPhysicalExercises(json);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        console.log(physicalExercises)\r\n\r\n        fetch('http://localhost:8080/health-reset/typeOfExercise/index')\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setTypesOfExercise(json);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        console.log(typesOfExercise)\r\n\r\n        fetch('http://localhost:8080/health-reset/activityLevel/index')\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setActivityLevels(json);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        console.log(activityLevels)\r\n        localStorage.setItem(\"activityLevels\", JSON.stringify(activityLevels));\r\n    }, []);\r\n\r\n    const errors = {\r\n        name: \"invalid name\",\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const handleInput = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setRoutine({ ...routine, [name] : value,\r\n            specialist: JSON.parse(localStorage.getItem('specialist'))});\r\n        localStorage.setItem(\"routine\", JSON.stringify(routine));\r\n        console.log(routine);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const target = e.target;\r\n        if (target.checked) {\r\n            setSelectedLevel(target.value);\r\n        }\r\n        setRoutine({ ...routine, activityLevel: selectedLevel});\r\n    };\r\n\r\n    useEffect(() => {\r\n        setRoutine({ ...routine, activityLevel: selectedLevel});\r\n    }, [selectedLevel])\r\n\r\n\r\n    useEffect(() => {\r\n        setSelectedExercises([ ...selectedExercises]);\r\n    }, [currentExercise])\r\n\r\n    const handleAddFitnessProgram = e => {\r\n        setEnableFitnessProgram(true);\r\n    }\r\n\r\n    const handleAddExercise = e =>{\r\n        setSelectedExercises([...selectedExercises, currentExercise])\r\n        setRoutine({...routine, listOfPhysicalExercises: selectedExercises})\r\n        localStorage.setItem(\"routine\", JSON.stringify(routine));\r\n    }\r\n\r\n    useEffect(() => {\r\n        setRoutine({...routine, listOfPhysicalExercises: selectedExercises});\r\n        localStorage.setItem(\"routine\", JSON.stringify(routine));\r\n    }, [selectedExercises])\r\n\r\n    console.log(routine)\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form>\r\n                <div>\r\n                    <div className=\"input-container\">\r\n                        <label>Give a name to this routine: </label>\r\n                        <input type=\"text\"\r\n                               value={routine.name}\r\n                               onChange={handleInput}\r\n                               name=\"name\" required\r\n                               id=\"name\"/>\r\n                        {renderErrorMessage(\"name\")}\r\n                    </div>\r\n                    <div className=\"input-container\">\r\n                        <label>Select the activity level of the fitness program: </label>\r\n                        <form>\r\n                            {activityLevels.map(({activityLevel}) => (\r\n                                <div key={activityLevel}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"levels\"\r\n                                        value={activityLevel}\r\n                                        checked={ checkedList[selectedLevel === {activityLevel}]}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <label>{activityLevel}</label>\r\n                                </div>\r\n                            ))}\r\n                        </form>\r\n                        {renderErrorMessage(\"activityLevel\")}\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <Button as={Col}\r\n                                variant=\"success\"\r\n                                onClick={() => handleAddFitnessProgram()}\r\n                        >Add fitness program\r\n                        </Button>\r\n                    </div>\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    {enableFitnessProgram ?\r\n                        <div className=\"input-container\">\r\n                            <label>Add some exercises to create a fitness program</label>\r\n                            <form>\r\n                                {typesOfExercise.map(({typeOfExercise}) => {\r\n                                    let p = typeOfExercise;\r\n                                    return (\r\n                                        <div className=\"row-cols-1\">\r\n                                            <div key={typeOfExercise}>\r\n                                                <label> <b> {typeOfExercise} </b> </label>\r\n                                                <div className=\"row-cols-1\">\r\n                                                    <select onChange={event => {\r\n                                                        for(var i = 0; i < physicalExercises.length; i++){\r\n                                                            if (event.target.value === physicalExercises.at(i).name){\r\n                                                                setCurrentExercise(physicalExercises.at(i))\r\n                                                            }\r\n                                                        }\r\n                                                    }}>\r\n                                                        {physicalExercises.map(({id, name, typeOfExercise}) => {\r\n                                                            if(p === typeOfExercise.typeOfExercise){\r\n                                                                return (\r\n                                                                    <option key={id} value={name}>\r\n                                                                        {name}\r\n                                                                    </option>\r\n                                                                )\r\n                                                            }\r\n                                                        })}\r\n                                                    </select>\r\n                                                    <Button as={Col}\r\n                                                            variant=\"secondary\"\r\n                                                            onClick={() => handleAddExercise()}>Add to list\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <span>&nbsp;&nbsp;</span>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </form>\r\n                            {(selectedExercises.length!==0) ?\r\n                                <div>\r\n                                    Selected exercises:\r\n                                    <ul>\r\n                                        {selectedExercises.map(({id, name, typeOfExercise}, key) => {\r\n                                            return (\r\n                                                <li>{name}</li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </div>\r\n                                : null}\r\n                        </div>\r\n                        : null}\r\n                </div>\r\n                <nav>\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/AddRoutineMealPlan\">\r\n                        <Button as={Col} variant=\"outline-success\">Go to the next step: Create a meal plan!</Button>\r\n                    </Link>\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/SpecialistActions\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </nav>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <span>&nbsp;&nbsp;</span>\r\n            <div className=\"login-form\" style={{backgroundColor: 'mistyrose'}}>\r\n                <div className=\"title\">Propose a routine</div>\r\n                {renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddRoutineFitnessProgram;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\AddRoutineMealPlan.js",["153","154","155","156","157","158","159","160","161","162"],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\AddRoutineDescription.js",["163","164","165"],[],{"ruleId":"166","severity":1,"message":"167","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"170","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":12},{"ruleId":"166","severity":1,"message":"171","line":4,"column":9,"nodeType":"168","messageId":"169","endLine":4,"endColumn":15},{"ruleId":"166","severity":1,"message":"172","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"172","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"166","severity":1,"message":"173","line":14,"column":12,"nodeType":"168","messageId":"169","endLine":14,"endColumn":26},{"ruleId":"166","severity":1,"message":"174","line":14,"column":28,"nodeType":"168","messageId":"169","endLine":14,"endColumn":45},{"ruleId":"166","severity":1,"message":"172","line":6,"column":16,"nodeType":"168","messageId":"169","endLine":6,"endColumn":25},{"ruleId":"166","severity":1,"message":"172","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":37,"column":8,"nodeType":"177","endLine":37,"endColumn":10,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":101,"column":8,"nodeType":"177","endLine":101,"endColumn":23,"suggestions":"180"},{"ruleId":"166","severity":1,"message":"181","line":17,"column":12,"nodeType":"168","messageId":"169","endLine":17,"endColumn":21},{"ruleId":"166","severity":1,"message":"182","line":17,"column":23,"nodeType":"168","messageId":"169","endLine":17,"endColumn":35},{"ruleId":"175","severity":1,"message":"183","line":53,"column":8,"nodeType":"177","endLine":53,"endColumn":10,"suggestions":"184"},{"ruleId":"175","severity":1,"message":"185","line":119,"column":8,"nodeType":"177","endLine":119,"endColumn":23,"suggestions":"186"},{"ruleId":"175","severity":1,"message":"187","line":77,"column":8,"nodeType":"177","endLine":77,"endColumn":10,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"189","line":148,"column":8,"nodeType":"177","endLine":148,"endColumn":25,"suggestions":"190"},{"ruleId":"175","severity":1,"message":"191","line":152,"column":8,"nodeType":"177","endLine":152,"endColumn":27,"suggestions":"192"},{"ruleId":"175","severity":1,"message":"193","line":170,"column":8,"nodeType":"177","endLine":170,"endColumn":26,"suggestions":"194"},{"ruleId":"175","severity":1,"message":"191","line":174,"column":8,"nodeType":"177","endLine":174,"endColumn":19,"suggestions":"195"},{"ruleId":"166","severity":1,"message":"167","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":16},{"ruleId":"175","severity":1,"message":"196","line":34,"column":8,"nodeType":"177","endLine":34,"endColumn":10,"suggestions":"197"},{"ruleId":"175","severity":1,"message":"198","line":92,"column":8,"nodeType":"177","endLine":92,"endColumn":22,"suggestions":"199"},{"ruleId":"166","severity":1,"message":"200","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":13},{"ruleId":"166","severity":1,"message":"201","line":11,"column":27,"nodeType":"168","messageId":"169","endLine":11,"endColumn":43},{"ruleId":"166","severity":1,"message":"202","line":12,"column":12,"nodeType":"168","messageId":"169","endLine":12,"endColumn":23},{"ruleId":"166","severity":1,"message":"203","line":12,"column":25,"nodeType":"168","messageId":"169","endLine":12,"endColumn":39},{"ruleId":"175","severity":1,"message":"204","line":66,"column":8,"nodeType":"177","endLine":66,"endColumn":10,"suggestions":"205"},{"ruleId":"166","severity":1,"message":"206","line":68,"column":11,"nodeType":"168","messageId":"169","endLine":68,"endColumn":17},{"ruleId":"175","severity":1,"message":"207","line":95,"column":8,"nodeType":"177","endLine":95,"endColumn":23,"suggestions":"208"},{"ruleId":"175","severity":1,"message":"209","line":100,"column":8,"nodeType":"177","endLine":100,"endColumn":25,"suggestions":"210"},{"ruleId":"175","severity":1,"message":"207","line":115,"column":8,"nodeType":"177","endLine":115,"endColumn":27,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":176,"column":109,"nodeType":"214","messageId":"215","endLine":176,"endColumn":111},{"ruleId":"166","severity":1,"message":"200","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":13},{"ruleId":"166","severity":1,"message":"201","line":11,"column":27,"nodeType":"168","messageId":"169","endLine":11,"endColumn":43},{"ruleId":"166","severity":1,"message":"202","line":12,"column":12,"nodeType":"168","messageId":"169","endLine":12,"endColumn":23},{"ruleId":"166","severity":1,"message":"203","line":12,"column":25,"nodeType":"168","messageId":"169","endLine":12,"endColumn":39},{"ruleId":"175","severity":1,"message":"216","line":50,"column":8,"nodeType":"177","endLine":50,"endColumn":10,"suggestions":"217"},{"ruleId":"166","severity":1,"message":"206","line":52,"column":11,"nodeType":"168","messageId":"169","endLine":52,"endColumn":17},{"ruleId":"166","severity":1,"message":"218","line":56,"column":11,"nodeType":"168","messageId":"169","endLine":56,"endColumn":29},{"ruleId":"166","severity":1,"message":"219","line":61,"column":11,"nodeType":"168","messageId":"169","endLine":61,"endColumn":22},{"ruleId":"175","severity":1,"message":"220","line":76,"column":8,"nodeType":"177","endLine":76,"endColumn":21,"suggestions":"221"},{"ruleId":"175","severity":1,"message":"207","line":87,"column":8,"nodeType":"177","endLine":87,"endColumn":22,"suggestions":"222"},{"ruleId":"166","severity":1,"message":"172","line":1,"column":16,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"223","line":8,"column":9,"nodeType":"168","messageId":"169","endLine":8,"endColumn":13},{"ruleId":"166","severity":1,"message":"218","line":21,"column":11,"nodeType":"168","messageId":"169","endLine":21,"endColumn":29},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'render' is defined but never used.","'useEffect' is defined but never used.","'existentAdmins' is assigned a value but never used.","'setExistentAdmins' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activityLevels'. Either include it or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has a missing dependency: 'profileRegistration'. Either include it or remove the dependency array. You can also do a functional update 'setProfileRegistration(p => ...)' if you only need 'profileRegistration' in the 'setProfileRegistration' call.",["225"],"'profileId' is assigned a value but never used.","'setProfileId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["226"],"React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array. You can also do a functional update 'setProfile(p => ...)' if you only need 'profile' in the 'setProfile' call.",["227"],"React Hook useEffect has missing dependencies: 'food' and 'physicalExercises'. Either include them or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'executedExercises'. Either include it or remove the dependency array. You can also do a functional update 'setExecutedExercises(e => ...)' if you only need 'executedExercises' in the 'setExecutedExercises' call.",["229"],"React Hook useEffect has a missing dependency: 'trackedActivity'. Either include it or remove the dependency array. You can also do a functional update 'setTrackedActivity(t => ...)' if you only need 'trackedActivity' in the 'setTrackedActivity' call.",["230"],"React Hook useEffect has a missing dependency: 'eatenFood'. Either include it or remove the dependency array. You can also do a functional update 'setEatenFood(e => ...)' if you only need 'eatenFood' in the 'setEatenFood' call.",["231"],["232"],"React Hook useEffect has a missing dependency: 'typesOfExercise'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'physicalExercise'. Either include it or remove the dependency array. You can also do a functional update 'setPhysicalExercise(p => ...)' if you only need 'physicalExercise' in the 'setPhysicalExercise' call.",["234"],"'axios' is defined but never used.","'setErrorMessages' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activityLevels', 'physicalExercises', and 'typesOfExercise'. Either include them or remove the dependency array.",["235"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'routine'. Either include it or remove the dependency array. You can also do a functional update 'setRoutine(r => ...)' if you only need 'routine' in the 'setRoutine' call.",["236"],"React Hook useEffect has a missing dependency: 'selectedExercises'. Either include it or remove the dependency array. You can also do a functional update 'setSelectedExercises(s => ...)' if you only need 'selectedExercises' in the 'setSelectedExercises' call.",["237"],["238"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'food'. Either include it or remove the dependency array.",["239"],"'renderErrorMessage' is assigned a value but never used.","'handleInput' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedFood'. Either include it or remove the dependency array. You can also do a functional update 'setSelectedFood(s => ...)' if you only need 'selectedFood' in the 'setSelectedFood' call.",["240"],["241"],"'Form' is defined but never used.",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [activityLevels]",{"range":"278","text":"279"},"Update the dependencies array to be: [profileRegistration, selectedLevel]",{"range":"280","text":"281"},"Update the dependencies array to be: [profile]",{"range":"282","text":"283"},"Update the dependencies array to be: [profile, selectedLevel]",{"range":"284","text":"285"},"Update the dependencies array to be: [food, physicalExercises]",{"range":"286","text":"287"},"Update the dependencies array to be: [currentExercise, executedExercises]",{"range":"288","text":"289"},"Update the dependencies array to be: [executedExercises, trackedActivity]",{"range":"290","text":"291"},"Update the dependencies array to be: [currentEatenFood, eatenFood]",{"range":"292","text":"293"},"Update the dependencies array to be: [eatenFood, trackedActivity]",{"range":"294","text":"295"},"Update the dependencies array to be: [typesOfExercise]",{"range":"296","text":"297"},"Update the dependencies array to be: [physicalExercise, selectedType]",{"range":"298","text":"299"},"Update the dependencies array to be: [activityLevels, physicalExercises, typesOfExercise]",{"range":"300","text":"301"},"Update the dependencies array to be: [routine, selectedLevel]",{"range":"302","text":"303"},"Update the dependencies array to be: [currentExercise, selectedExercises]",{"range":"304","text":"305"},"Update the dependencies array to be: [routine, selectedExercises]",{"range":"306","text":"307"},"Update the dependencies array to be: [food]",{"range":"308","text":"309"},"Update the dependencies array to be: [currentFood, selectedFood]",{"range":"310","text":"311"},"Update the dependencies array to be: [routine, selectedFood]",{"range":"312","text":"313"},[1330,1332],"[activityLevels]",[4195,4210],"[profileRegistration, selectedLevel]",[1920,1922],"[profile]",[4717,4732],"[profile, selectedLevel]",[2481,2483],"[food, physicalExercises]",[5059,5076],"[currentExercise, executedExercises]",[5206,5225],"[executedExercises, trackedActivity]",[5957,5975],"[currentEatenFood, eatenFood]",[6092,6103],"[eatenFood, trackedActivity]",[1285,1287],"[typesOfExercise]",[3506,3520],"[physicalExercise, selectedType]",[2449,2451],"[activityLevels, physicalExercises, typesOfExercise]",[3289,3304],"[routine, selectedLevel]",[3397,3414],"[currentExercise, selectedExercises]",[3950,3969],"[routine, selectedExercises]",[1650,1652],"[food]",[2394,2407],"[currentFood, selectedFood]",[2796,2810],"[routine, selectedFood]"]