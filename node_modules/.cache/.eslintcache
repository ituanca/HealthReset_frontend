[{"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\index.js":"1","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\App.js":"2","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\reportWebVitals.js":"3","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\StartPage.js":"4","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SignUpSpecialist.js":"5","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\LogInAdmin.js":"6","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\LogInSpecialist.js":"7","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\SignUpRegularUser.js":"8","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\SignUpAdmin.js":"9","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\LogInRegularUser.js":"10","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AdminActions.js":"11","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\RegularUserActions.js":"12","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPrimaryFood.js":"13","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\CreateProfile.js":"14","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SpecialistActions.js":"15","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\EditProfile.js":"16","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\TrackActivity.js":"17","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPhysicalExercise.js":"18"},{"size":2501,"mtime":1652788059785,"results":"19","hashOfConfig":"20"},{"size":420,"mtime":1652438291651,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1652436605495,"results":"22","hashOfConfig":"20"},{"size":3023,"mtime":1652451206793,"results":"23","hashOfConfig":"20"},{"size":5670,"mtime":1652715072043,"results":"24","hashOfConfig":"20"},{"size":4598,"mtime":1652556960878,"results":"25","hashOfConfig":"20"},{"size":4591,"mtime":1652715072016,"results":"26","hashOfConfig":"20"},{"size":5774,"mtime":1652556729354,"results":"27","hashOfConfig":"20"},{"size":5142,"mtime":1652556729361,"results":"28","hashOfConfig":"20"},{"size":4883,"mtime":1652717760976,"results":"29","hashOfConfig":"20"},{"size":1627,"mtime":1652788059810,"results":"30","hashOfConfig":"20"},{"size":1644,"mtime":1652732681526,"results":"31","hashOfConfig":"20"},{"size":7439,"mtime":1652786302229,"results":"32","hashOfConfig":"20"},{"size":8494,"mtime":1652713843137,"results":"33","hashOfConfig":"20"},{"size":1051,"mtime":1652715327381,"results":"34","hashOfConfig":"20"},{"size":9233,"mtime":1652729821929,"results":"35","hashOfConfig":"20"},{"size":6406,"mtime":1652733489871,"results":"36","hashOfConfig":"20"},{"size":6992,"mtime":1652790254366,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12ofxns",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\index.js",["101"],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\App.js",["102","103"],[],"import logo from './logo.svg';\nimport './App.css';\nimport StartPage from \"./components/StartPage\";\nimport {render} from \"react-dom\";\n\n\nfunction App() {\n\n  const renderForm = (\n        <div>\n          <div className='App'>\n            {/*<header className=\"App-header\">*/}\n              <StartPage />\n            {/*</header>*/}\n          </div>\n        </div>\n  )\n\n  return (\n    renderForm\n  );\n\n}\n\nexport default App;\n",[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\reportWebVitals.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\StartPage.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SignUpSpecialist.js",["104","105"],[],"import React, {useEffect, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction SignUpRegularUser(){\r\n    const [errorMessagesSS, setErrorMessagesSS] = useState({});\r\n    const [isSubmittedSS, setIsSubmittedSS] = useState(false);\r\n    const [specialistRegistration, setSpecialistRegistration] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const errors = {\r\n        username: \"username already exists\",\r\n        email: \"email already exists\",\r\n        invalid_email: \"invalid email\"\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setSpecialistRegistration({ ...specialistRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .post('http://localhost:8080/health-reset/specialist/signUp', specialistRegistration)\r\n            .then((response) => {\r\n                console.info(response);\r\n                if (response.data === \"username_exists\") {\r\n                    setErrorMessagesSS({name: \"username\", message: errors.username});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else if (response.data === \"email_exists\"){\r\n                    setErrorMessagesSS({name: \"email\", message: errors.email});\r\n                    localStorage.removeItem(\"specialist\");\r\n                }  else if (response.data === \"invalid_email\"){\r\n                    setErrorMessagesSS({name: \"invalid_email\", message: errors.invalid_email});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else{\r\n                    setIsSubmittedSS(true);\r\n                    localStorage.setItem(\"specialist\", JSON.stringify(specialistRegistration));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            });\r\n    };\r\n\r\n    const renderErrorMessage = (nameErr) =>\r\n        nameErr === errorMessagesSS.name && (\r\n            <div className=\"error\">{errorMessagesSS.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Name </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.name}\r\n                           onChange={handleInput}\r\n                           name=\"name\" required id = \"name\"/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Email </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.email}\r\n                           onChange={handleInput}\r\n                           name=\"email\" required id = \"email\"/>\r\n                    {renderErrorMessage(\"email\")}\r\n                    {renderErrorMessage(\"invalid_email\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id = \"username\"/>\r\n                    {renderErrorMessage(\"username\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={specialistRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id = \"password\"/>\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'mistyrose',}}>\r\n                <div className=\"title\">Sign Up</div>\r\n                {isSubmittedSS ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Specialist account was created successfully!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/SpecialistActions\">\r\n                                <Button as={Col} variant=\"secondary\">Go to specialist page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<LogInCustomer />, rootElement);\r\nexport default SignUpRegularUser;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\LogInAdmin.js",["106","107","108","109"],[],"import React, {useEffect, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction LogInAdmin(){\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [existentAdmins, setExistentAdmins] = useState( [] );\r\n    const [adminRegistration, setAdminRegistration] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\",\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setAdminRegistration({ ...adminRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/health-reset/admin/login\", {\r\n                params: {\r\n                    username: adminRegistration.username,\r\n                    password: adminRegistration.password\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data === \"username_error\") {\r\n                    setErrorMessages({name: \"uname\", message: errors.uname});\r\n                    localStorage.removeItem(\"admin\");\r\n                } else if (response.data === \"password_error\"){\r\n                    setErrorMessages({name: \"pass\", message: errors.pass});\r\n                    localStorage.removeItem(\"customer\");\r\n                } else{\r\n                    setIsSubmitted(true);\r\n                    localStorage.setItem(\"admin\", JSON.stringify(adminRegistration));\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            );\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={adminRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id = \"username\"/>\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={adminRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id = \"password\"/>\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'lightblue',}}>\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Admin has successfully logged in!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/AdminActions\">\r\n                                <Button as={Col} variant=\"primary\">Go to admin page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogInAdmin;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\LogInSpecialist.js",["110"],[],"import background from \"../../img/b.jpg\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\"\r\n\r\nfunction LogInSpecialist() {\r\n\r\n    const [errorMessagesS, setErrorMessagesS] = useState({});\r\n    const [isSubmittedS, setIsSubmittedS] = useState(false);\r\n    const [specialistRegistration, setSpecialistRegistration] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\",\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setSpecialistRegistration({ ...specialistRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/health-reset/specialist/login\", {\r\n                params: {\r\n                    username: specialistRegistration.username,\r\n                    password: specialistRegistration.password\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data === \"username_error\") {\r\n                    setErrorMessagesS({name: \"uname\", message: errors.uname});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else if (response.data === \"password_error\"){\r\n                    setErrorMessagesS({name: \"pass\", message: errors.pass});\r\n                    localStorage.removeItem(\"specialist\");\r\n                } else{\r\n                    setIsSubmittedS(true);\r\n                    localStorage.setItem(\"specialist\", JSON.stringify(specialistRegistration));\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            );\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessagesS.name && (\r\n            <div className=\"error\">{errorMessagesS.message}</div>\r\n        );\r\n\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={specialistRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id=\"username\"/>\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={specialistRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id=\"password\"/>\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n            <Outlet/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'mistyrose',}}>\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmittedS ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Specialist has successfully logged in!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/SpecialistActions\">\r\n                                <Button as={Col} variant=\"secondary\">Go to specialist page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogInSpecialist;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\SignUpRegularUser.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\SignUpAdmin.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\LogInRegularUser.js",["111","112"],[],"import React, {useEffect, useState} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction LogInRegularUser(){\r\n\r\n    const [errorMessagesR, setErrorMessagesR] = useState({} );\r\n    const [isSubmittedR, setIsSubmittedR] = useState(false );\r\n    const [regularUserRegistration, setRegularUserRegistration] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setRegularUserRegistration({ ...regularUserRegistration, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/health-reset/regularUser/login\", {\r\n                params: {\r\n                    username: regularUserRegistration.username,\r\n                    password: regularUserRegistration.password\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data === \"username_error\") {\r\n                    setErrorMessagesR({name: \"uname\", message: errors.uname});\r\n                    localStorage.removeItem(\"regularUser\");\r\n                } else if (response.data === \"password_error\"){\r\n                    setErrorMessagesR({name: \"pass\", message: errors.pass});\r\n                    localStorage.removeItem(\"regularUser\");\r\n                } else{\r\n                    setIsSubmittedR(true);\r\n                    localStorage.setItem(\"regularUser\", JSON.stringify(regularUserRegistration));\r\n                    localStorage.setItem(\"regularUserUsername\", JSON.stringify(regularUserRegistration.username));\r\n                }\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            );\r\n    };\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessagesR.name && (\r\n            <div className=\"error\">{errorMessagesR.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\"\r\n                           value={regularUserRegistration.username}\r\n                           onChange={handleInput}\r\n                           name=\"username\" required id = \"username\"/>\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\"\r\n                           value={regularUserRegistration.password}\r\n                           onChange={handleInput}\r\n                           name=\"password\" required id = \"password\"/>\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'darkseagreen',}}>\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmittedR ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">User has successfully logged in!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/RegularUserActions\">\r\n                                <Button as={Col} variant=\"success\">Go to regular user page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    : renderForm}\r\n                <Outlet/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const rootElement = document.getElementById(\"root\");\r\n// ReactDOM.render(<LogInCustomer />, rootElement);\r\nexport default LogInRegularUser;\r\n\r\n\r\n","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AdminActions.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\RegularUserActions.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPrimaryFood.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\CreateProfile.js",["113","114"],[],"import React, {useEffect, useState} from \"react\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreateProfile(){\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [profileRegistration, setProfileRegistration] = useState({\r\n        weight: \"\",\r\n        height: \"\",\r\n        birthdate: \"\",\r\n        activityLevel: \"\",\r\n        weightGoal: \"\",\r\n        nrOfStepsGoal: \"\",\r\n        regularUser: []\r\n    });\r\n    const [activityLevels, setActivityLevels] = useState( [] );\r\n    const [checkedList] = useState(new Array(activityLevels.length).fill(false));\r\n    const [selectedLevel, setSelectedLevel] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080/health-reset/activityLevel/index')\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setActivityLevels(json);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n        console.log(activityLevels)\r\n        localStorage.setItem(\"activityLevels\", JSON.stringify(activityLevels));\r\n    }, []);\r\n\r\n    const errors = {\r\n        weight: \"invalid weight\",\r\n        height: \"invalid height\",\r\n        birthdate: \"invalid birthdate\",\r\n        activityLevel: \"activity level was not selected\",\r\n        weightGoal: \"invalid weight goal\",\r\n        nrOfStepsGoal: \"invalid number of steps goal\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .post('http://localhost:8080/health-reset/profile/create', profileRegistration)\r\n            .then((response) => {\r\n                console.info(response);\r\n                if (response.data === \"invalid_weight\") {\r\n                    setErrorMessages({name: \"weight\", message: errors.weight});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_height\"){\r\n                    setErrorMessages({name: \"height\", message: errors.height});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_birthdate\"){\r\n                    setErrorMessages({name: \"birthdate\", message: errors.birthdate});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_activityLevel\"){\r\n                    setErrorMessages({name: \"activityLevel\", message: errors.activityLevel});\r\n                    localStorage.removeItem(\"profile\");\r\n                }  else if (response.data === \"invalid_weightGoal\"){\r\n                    setErrorMessages({name: \"weightGoal\", message: errors.weightGoal});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_nrOfStepsGoal\"){\r\n                    setErrorMessages({name: \"nrOfStepsGoal\", message: errors.nrOfStepsGoal});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else {\r\n                    setIsSubmitted(true);\r\n                    localStorage.setItem(\"profile\", JSON.stringify(profileRegistration));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            });\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setProfileRegistration({ ...profileRegistration, [name] : value,\r\n            regularUser: JSON.parse(localStorage.getItem('regularUser'))});\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const target = e.target;\r\n        if (target.checked) {\r\n            setSelectedLevel(target.value);\r\n        }\r\n        setProfileRegistration({ ...profileRegistration, activityLevel: selectedLevel});\r\n    };\r\n\r\n    useEffect(() => {\r\n        setProfileRegistration({ ...profileRegistration, activityLevel: selectedLevel});\r\n    }, [selectedLevel])\r\n\r\n    console.log(profileRegistration)\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Weight(kg) </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.weight}\r\n                           onChange={handleInput}\r\n                           name=\"weight\" required/>\r\n                    {renderErrorMessage(\"weight\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Height(cm) </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.height}\r\n                           onChange={handleInput}\r\n                           name=\"height\" required/>\r\n                    {renderErrorMessage(\"height\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Birthdate </label>\r\n                    <input type=\"date\"\r\n                           value={profileRegistration.birthdate}\r\n                           onChange={handleInput}\r\n                           name=\"birthdate\" required/>\r\n                    {renderErrorMessage(\"birthdate\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Activity level: </label>\r\n                    <form>\r\n                        {activityLevels.map(({activityLevel}) => (\r\n                            <div key={activityLevel}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name=\"levels\"\r\n                                    value={activityLevel}\r\n                                    checked={ checkedList[selectedLevel === {activityLevel}]}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <label>{activityLevel}</label>\r\n                            </div>\r\n                        ))}\r\n                    </form>\r\n                    {renderErrorMessage(\"activityLevel\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Weight goal(kg) </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.weightGoal}\r\n                           onChange={handleInput}\r\n                           name=\"weightGoal\" required/>\r\n                    {renderErrorMessage(\"weightGoal\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Number of steps goal daily </label>\r\n                    <input type=\"number\"\r\n                           value={profileRegistration.nrOfStepsGoal}\r\n                           onChange={handleInput}\r\n                           name=\"nrOfStepsGoal\" required/>\r\n                    {renderErrorMessage(\"nrOfStepsGoal\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'darkseagreen',}}>\r\n                <div className=\"title\">Complete your profile</div>\r\n                {isSubmitted ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Profile successfully created!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/RegularUserActions\">\r\n                                <Button as={Col} variant=\"success\">Go to user page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>: renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProfile;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\specialist\\SpecialistActions.js",[],[],"D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\EditProfile.js",["115","116","117","118"],[],"import React, {useEffect, useState} from \"react\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction EditProfile(){\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [profile, setProfile] = useState({});\r\n    const [activityLevels, setActivityLevels] = useState( [] );\r\n    const [checkedList] = useState(new Array(activityLevels.length).fill(false));\r\n    const [selectedLevel, setSelectedLevel] = useState(\"\");\r\n    const [profileId, setProfileId] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8080/health-reset/activityLevel/index')\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setActivityLevels(json);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n\r\n        const regularUser = JSON.parse(localStorage.getItem(\"regularUser\"));\r\n        console.log(regularUser)\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/health-reset/regularUser/findProfileByRegularUser\", {\r\n                params:{\r\n                    username: regularUser.username\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if(response.data === \"\"){\r\n                    console.log(\"There was an error!\")\r\n                }else{\r\n                    setProfile(response.data);\r\n                    localStorage.setItem(\"profile\", JSON.stringify(profile));\r\n                }\r\n            })\r\n            .catch((error) =>\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            );\r\n\r\n        //here, it is still empty\r\n        console.log(profile);\r\n\r\n    }, []);\r\n\r\n    console.log(profile);\r\n\r\n    const errors = {\r\n        weight: \"invalid weight\",\r\n        height: \"invalid height\",\r\n        birthdate: \"invalid birthdate\",\r\n        activityLevel: \"activity level was not selected\",\r\n        weightGoal: \"invalid weight goal\",\r\n        nrOfStepsGoal: \"invalid number of steps goal\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .put('http://localhost:8080/health-reset/profile/update', profile)\r\n            .then((response) => {\r\n                console.info(response);\r\n                if (response.data === \"invalid_weight\") {\r\n                    setErrorMessages({name: \"weight\", message: errors.weight});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_height\"){\r\n                    setErrorMessages({name: \"height\", message: errors.height});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_birthdate\"){\r\n                    setErrorMessages({name: \"birthdate\", message: errors.birthdate});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_activityLevel\"){\r\n                    setErrorMessages({name: \"activityLevel\", message: errors.activityLevel});\r\n                    localStorage.removeItem(\"profile\");\r\n                }  else if (response.data === \"invalid_weightGoal\"){\r\n                    setErrorMessages({name: \"weightGoal\", message: errors.weightGoal});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else if(response.data === \"invalid_nrOfStepsGoal\"){\r\n                    setErrorMessages({name: \"nrOfStepsGoal\", message: errors.nrOfStepsGoal});\r\n                    localStorage.removeItem(\"profile\");\r\n                } else {\r\n                    setIsSubmitted(true);\r\n                    localStorage.setItem(\"profile\", JSON.stringify(profile));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"There was an error!\", error.response.data.message)\r\n            });\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setProfile({ ...profile, [name] : value,\r\n            regularUser: JSON.parse(localStorage.getItem('regularUser'))});\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const target = e.target;\r\n        if (target.checked) {\r\n            setSelectedLevel(target.value);\r\n        }\r\n        setProfile({ ...profile, activityLevel: selectedLevel});\r\n    };\r\n\r\n    useEffect(() => {\r\n        setProfile({ ...profile, activityLevel: selectedLevel});\r\n    }, [selectedLevel])\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Weight(kg) </label>\r\n                    <input type=\"number\"\r\n                           value={profile.weight}\r\n                           onChange={handleInput}\r\n                           placeholder={profile.weight}\r\n                           name=\"weight\" required/>\r\n                    {renderErrorMessage(\"weight\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Height(cm) </label>\r\n                    <input type=\"number\"\r\n                           value={profile.height}\r\n                           onChange={handleInput}\r\n                           placeholder={profile.height}\r\n                           name=\"height\" required/>\r\n                    {renderErrorMessage(\"height\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Birthdate </label>\r\n                    <input type=\"date\"\r\n                           value={profile.birthdate}\r\n                           onChange={handleInput}\r\n                           placeholder={profile.birthdate}\r\n                           name=\"birthdate\" required/>\r\n                    {renderErrorMessage(\"birthdate\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Activity level: {profile.activityLevel}</label>\r\n                    <form>\r\n                        {activityLevels.map(({activityLevel}) => (\r\n                            <div key={activityLevel}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    name=\"levels\"\r\n                                    value={activityLevel}\r\n                                    checked={ checkedList[selectedLevel === {activityLevel}] }\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <label>{activityLevel}</label>\r\n                            </div>\r\n                        ))}\r\n                    </form>\r\n                    {renderErrorMessage(\"activityLevel\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Weight goal(kg) </label>\r\n                    <input type=\"number\"\r\n                           value={profile.weightGoal}\r\n                           onChange={handleInput}\r\n                           placeholder={profile.weightGoal}\r\n                           name=\"weightGoal\" required/>\r\n                    {renderErrorMessage(\"weightGoal\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Number of steps goal daily </label>\r\n                    <input type=\"number\"\r\n                           value={profile.nrOfStepsGoal}\r\n                           onChange={handleInput}\r\n                           placeholder={profile.nrOfStepsGoal}\r\n                           name=\"nrOfStepsGoal\" required/>\r\n                    {renderErrorMessage(\"nrOfStepsGoal\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'darkseagreen',}}>\r\n                <div className=\"title\">Edit your profile</div>\r\n                {isSubmitted ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Profile successfully updated!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/RegularUserActions\">\r\n                                <Button as={Col} variant=\"success\">Go to user page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>: renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditProfile;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\regularUser\\TrackActivity.js",["119","120","121","122","123","124","125","126"],[],"import React, {useEffect, useState} from \"react\";\r\nimport \"../styles.css\";\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Col} from \"reactstrap\";\r\nimport background from \"../../img/b.jpg\";\r\nimport axios from \"axios\";\r\n\r\nfunction TrackActivity(){\r\n\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [trackedActivity, setTrackedActivity] = useState({\r\n        date: \"\",\r\n        nrOfSteps: \"\",\r\n        listOfPhysicalExercises: [],\r\n        listOfTrackedFood: []\r\n    });\r\n    const [activityLevels, setActivityLevels] = useState( [] );\r\n    const [checkedList] = useState(new Array(activityLevels.length).fill(false));\r\n    const [selectedLevel, setSelectedLevel] = useState(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     fetch('http://localhost:8080/health-reset/activityLevel/index')\r\n    //         .then((response) => response.json())\r\n    //         .then((json) => {\r\n    //             setActivityLevels(json);\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n    //     console.log(activityLevels)\r\n    //     localStorage.setItem(\"activityLevels\", JSON.stringify(activityLevels));\r\n    // }, []);\r\n\r\n    const errors = {\r\n        nrOfSteps: \"invalid number\",\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        // Prevent page reload\r\n        event.preventDefault();\r\n\r\n        // axios\r\n        //     .post('http://localhost:8080/health-reset/profile/create', trackedActivity)\r\n        //     .then((response) => {\r\n        //         console.info(response);\r\n        //         if (response.data === \"invalid_weight\") {\r\n        //             setErrorMessages({name: \"weight\", message: errors.weight});\r\n        //             localStorage.removeItem(\"profile\");\r\n        //         } else if(response.data === \"invalid_height\"){\r\n        //             setErrorMessages({name: \"height\", message: errors.height});\r\n        //             localStorage.removeItem(\"profile\");\r\n        //         } else if(response.data === \"invalid_birthdate\"){\r\n        //             setErrorMessages({name: \"birthdate\", message: errors.birthdate});\r\n        //             localStorage.removeItem(\"profile\");\r\n        //         } else if(response.data === \"invalid_activityLevel\"){\r\n        //             setErrorMessages({name: \"activityLevel\", message: errors.activityLevel});\r\n        //             localStorage.removeItem(\"profile\");\r\n        //         }  else if (response.data === \"invalid_weightGoal\"){\r\n        //             setErrorMessages({name: \"weightGoal\", message: errors.weightGoal});\r\n        //             localStorage.removeItem(\"profile\");\r\n        //         } else if(response.data === \"invalid_nrOfStepsGoal\"){\r\n        //             setErrorMessages({name: \"nrOfStepsGoal\", message: errors.nrOfStepsGoal});\r\n        //             localStorage.removeItem(\"profile\");\r\n        //         } else {\r\n        //             setIsSubmitted(true);\r\n        //             localStorage.setItem(\"profile\", JSON.stringify(trackedActivity));\r\n        //         }\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         console.error(\"There was an error!\", error.response.data.message)\r\n        //     });\r\n    };\r\n\r\n    const handleInput = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        setTrackedActivity({ ...trackedActivity, [name] : value,\r\n            regularUser: JSON.parse(localStorage.getItem('regularUser'))});\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const target = e.target;\r\n        if (target.checked) {\r\n            setSelectedLevel(target.value);\r\n        }\r\n        setTrackedActivity({ ...trackedActivity});\r\n    };\r\n\r\n    useEffect(() => {\r\n        setTrackedActivity({ ...trackedActivity});\r\n    }, [selectedLevel])\r\n\r\n    console.log(trackedActivity)\r\n\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit = {handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <input type=\"date\"\r\n                           value={trackedActivity.date}\r\n                           placeholder={trackedActivity.date}\r\n                           readOnly = {true}\r\n                           name=\"date\"/>\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Number of steps </label>\r\n                    <input type=\"number\"\r\n                           value={trackedActivity.nrOfSteps}\r\n                           onChange={handleInput}\r\n                           name=\"nrOfSteps\"/>\r\n                    {renderErrorMessage(\"nrOfSteps\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\"/>\r\n                </div>\r\n                <span>&nbsp;&nbsp;</span>\r\n                <div className=\"col-md-12 text-center\">\r\n                    <span>&nbsp;&nbsp;</span>\r\n                    <Link to=\"/RegularUserActions\">\r\n                        <Button as={Col} variant=\"outline-dark\">Go back</Button>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\" style={{ backgroundImage: `url(${background})` }}>\r\n            <div className=\"login-form\" style={{backgroundColor: 'darkseagreen',}}>\r\n                <div className=\"title\">Complete your profile</div>\r\n                {isSubmitted ?\r\n                    <div>\r\n                        <h5 className=\"text-center\">Your today activity was registered!</h5>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Link to=\"/RegularUserActions\">\r\n                                <Button as={Col} variant=\"success\">Go to user page</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>: renderForm}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrackActivity;","D:\\Facultate\\An 3\\Sem 2\\SD\\laboratory\\HealthReset\\health-reset-frontend\\src\\components\\admin\\AddPhysicalExercise.js",["127","128","129"],[],{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":12},{"ruleId":"130","severity":1,"message":"135","line":4,"column":9,"nodeType":"132","messageId":"133","endLine":4,"endColumn":15},{"ruleId":"130","severity":1,"message":"136","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"137","line":14,"column":12,"nodeType":"132","messageId":"133","endLine":14,"endColumn":26},{"ruleId":"130","severity":1,"message":"138","line":14,"column":28,"nodeType":"132","messageId":"133","endLine":14,"endColumn":45},{"ruleId":"130","severity":1,"message":"136","line":6,"column":16,"nodeType":"132","messageId":"133","endLine":6,"endColumn":25},{"ruleId":"130","severity":1,"message":"136","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":37,"column":8,"nodeType":"141","endLine":37,"endColumn":10,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":101,"column":8,"nodeType":"141","endLine":101,"endColumn":23,"suggestions":"144"},{"ruleId":"130","severity":1,"message":"145","line":17,"column":12,"nodeType":"132","messageId":"133","endLine":17,"endColumn":21},{"ruleId":"130","severity":1,"message":"146","line":17,"column":23,"nodeType":"132","messageId":"133","endLine":17,"endColumn":35},{"ruleId":"139","severity":1,"message":"147","line":53,"column":8,"nodeType":"141","endLine":53,"endColumn":10,"suggestions":"148"},{"ruleId":"139","severity":1,"message":"149","line":119,"column":8,"nodeType":"141","endLine":119,"endColumn":23,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"151","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":13},{"ruleId":"130","severity":1,"message":"152","line":11,"column":27,"nodeType":"132","messageId":"133","endLine":11,"endColumn":43},{"ruleId":"130","severity":1,"message":"153","line":12,"column":25,"nodeType":"132","messageId":"133","endLine":12,"endColumn":39},{"ruleId":"130","severity":1,"message":"154","line":19,"column":28,"nodeType":"132","messageId":"133","endLine":19,"endColumn":45},{"ruleId":"130","severity":1,"message":"155","line":20,"column":12,"nodeType":"132","messageId":"133","endLine":20,"endColumn":23},{"ruleId":"130","severity":1,"message":"156","line":36,"column":11,"nodeType":"132","messageId":"133","endLine":36,"endColumn":17},{"ruleId":"130","severity":1,"message":"157","line":83,"column":11,"nodeType":"132","messageId":"133","endLine":83,"endColumn":23},{"ruleId":"139","severity":1,"message":"158","line":93,"column":8,"nodeType":"141","endLine":93,"endColumn":23,"suggestions":"159"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"139","severity":1,"message":"160","line":34,"column":8,"nodeType":"141","endLine":34,"endColumn":10,"suggestions":"161"},{"ruleId":"139","severity":1,"message":"162","line":89,"column":8,"nodeType":"141","endLine":89,"endColumn":22,"suggestions":"163"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'render' is defined but never used.","'useEffect' is defined but never used.","'existentAdmins' is assigned a value but never used.","'setExistentAdmins' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activityLevels'. Either include it or remove the dependency array.","ArrayExpression",["164"],"React Hook useEffect has a missing dependency: 'profileRegistration'. Either include it or remove the dependency array. You can also do a functional update 'setProfileRegistration(p => ...)' if you only need 'profileRegistration' in the 'setProfileRegistration' call.",["165"],"'profileId' is assigned a value but never used.","'setProfileId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'profile'. Either include it or remove the dependency array. You can also do a functional update 'setProfile(p => ...)' if you only need 'profile' in the 'setProfile' call.",["167"],"'axios' is defined but never used.","'setErrorMessages' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'setActivityLevels' is assigned a value but never used.","'checkedList' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'trackedActivity'. Either include it or remove the dependency array. You can also do a functional update 'setTrackedActivity(t => ...)' if you only need 'trackedActivity' in the 'setTrackedActivity' call.",["168"],"React Hook useEffect has a missing dependency: 'typesOfExercise'. Either include it or remove the dependency array.",["169"],"React Hook useEffect has a missing dependency: 'physicalExercise'. Either include it or remove the dependency array. You can also do a functional update 'setPhysicalExercise(p => ...)' if you only need 'physicalExercise' in the 'setPhysicalExercise' call.",["170"],{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [activityLevels]",{"range":"185","text":"186"},"Update the dependencies array to be: [profileRegistration, selectedLevel]",{"range":"187","text":"188"},"Update the dependencies array to be: [profile]",{"range":"189","text":"190"},"Update the dependencies array to be: [profile, selectedLevel]",{"range":"191","text":"192"},"Update the dependencies array to be: [selectedLevel, trackedActivity]",{"range":"193","text":"194"},"Update the dependencies array to be: [typesOfExercise]",{"range":"195","text":"196"},"Update the dependencies array to be: [physicalExercise, selectedType]",{"range":"197","text":"198"},[1330,1332],"[activityLevels]",[4195,4210],"[profileRegistration, selectedLevel]",[1920,1922],"[profile]",[4717,4732],"[profile, selectedLevel]",[3930,3945],"[selectedLevel, trackedActivity]",[1285,1287],"[typesOfExercise]",[3301,3315],"[physicalExercise, selectedType]"]